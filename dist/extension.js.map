{"version":3,"sources":["webpack://headerlicense/external \"vscode\"","webpack://headerlicense/webpack/bootstrap","webpack://headerlicense/./src/extension.ts"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","context","vscode","workspace","onWillSaveTextDocument","file","document","isDirty","template","getConfiguration","get","editor","window","activeTextEditor","edit","editBuilder","console","log","languageId","getText","includes","insert","Position","onDidCreateFiles","filePath","files","fsPath","openPath","Uri","openTextDocument","then","doc","showTextDocument"],"mappings":"kCAAAA,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,uGCnBf,eAGA,oBAAyBQ,GAuBxBC,EAAOC,UAAUC,wBAAuBC,IACvC,IAAKA,EAAKC,SAASC,QAAS,OAC5B,MACMC,EADiBN,EAAOC,UAAUM,mBAAmBC,IAAI,0BAA0B,GAEnFC,EAAST,EAAOU,OAAOC,iBAC7BF,WAAQG,MAAKC,IACZC,QAAQC,IAAoC,gBAAhCN,aAAM,EAANA,EAAQL,SAASY,aAA6D,gBAAhCP,aAAM,EAANA,EAAQL,SAASY,aAA6D,qBAAhCP,aAAM,EAANA,EAAQL,SAASY,aACtF,gBAAhCP,aAAM,EAANA,EAAQL,SAASY,aAA6D,gBAAhCP,aAAM,EAANA,EAAQL,SAASY,aAA6D,qBAAhCP,aAAM,EAANA,EAAQL,SAASY,aAC5Gb,EAAKC,SAASa,UAAUC,SAASZ,IACpCO,EAAYM,OAAO,IAAInB,EAAOoB,SAAS,EAAG,GAAId,EAAS,YAM1DN,EAAOC,UAAUoB,kBAAkBlB,IAClC,MACMG,EADiBN,EAAOC,UAAUM,mBAAmBC,IAAI,0BAA0B,GAEnFc,EAAWnB,EAAKoB,MAAM,GAAGC,OACzBC,EAAWzB,EAAO0B,IAAIvB,KAAKmB,GACjCtB,EAAOC,UAAU0B,iBAAiBF,GAAUG,MAAMC,IACjD7B,EAAOU,OAAOoB,iBAAiBD,GAAKD,MAAK,KACvC,MAAMnB,EAAST,EAAOU,OAAOC,iBACM,gBAAhCF,aAAM,EAANA,EAAQL,SAASY,aAA6D,gBAAhCP,aAAM,EAANA,EAAQL,SAASY,aAA6D,qBAAhCP,aAAM,EAANA,EAAQL,SAASY,aAChHP,WAAQG,MAAKC,IACXA,EAAYM,OAAO,IAAInB,EAAOoB,SAAS,EAAG,GAAId,EAAS,mBAU9D,2B","file":"extension.js","sourcesContent":["module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n// \tconst temp = `/*\n// \t* Licensed Materials - Property of ROOTCLOUD\n// \t* THIS MODULE IS \"RESTRICTED MATERIALS OF ROOTCLOUD\"\n// \t* (c) Copyright ROOTCLOUD Inc. 2021 All Rights Reserved\n// \t*\n// \t* The source code for this program is not published or\n// \t* otherwise divested of its trade secrets\n// \t*/\n// `\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\t// console.log('Congratulations, your extension \"headerlicense\" is now active!');\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\t// let disposable = vscode.commands.registerCommand('headerlicense.helloWorld', () => {\n\t// \t// The code you place here will be executed every time your command is executed\n\t// \t// Display a message box to the user\n\t// \tvscode.window.showInformationMessage('welcome headerLicense!');\n\t// });\n\n\tvscode.workspace.onWillSaveTextDocument(file=>{\n\t\tif (!file.document.isDirty) return\n\t\tconst license:string = vscode.workspace.getConfiguration().get('headerLicense.license')||\"\";\n\t\tconst template:string = license;\n\t\tconst editor = vscode.window.activeTextEditor;\n\t\teditor?.edit(editBuilder=>{\n\t\t\tconsole.log(editor?.document.languageId !== 'javascript'&&editor?.document.languageId !== 'typescript'&&editor?.document.languageId !== 'typescriptreact')\n\t\t\tif(editor?.document.languageId !== 'javascript'&&editor?.document.languageId !== 'typescript'&&editor?.document.languageId !== 'typescriptreact') return;\n\t\t\tif(!file.document.getText().includes(template)){\n\t\t\t\teditBuilder.insert(new vscode.Position(0, 0), template+\"\\n\")\n\t\t\t}\n\t\t})\n\t\t// vscode.window.showInformationMessage('保存了');sss\n\t})\n\n\tvscode.workspace.onDidCreateFiles((file) => {\n\t\tconst license:string = vscode.workspace.getConfiguration().get('headerLicense.license')||\"\";\n\t\tconst template:string = license;\n\t\tconst filePath = file.files[0].fsPath\n\t\tconst openPath = vscode.Uri.file(filePath)\n\t\tvscode.workspace.openTextDocument(openPath).then((doc) => {\n\t\t\tvscode.window.showTextDocument(doc).then(() => {\n\t\t\t\t\tconst editor = vscode.window.activeTextEditor // 每次运行选中文件\n\t\t\t\t\tif(editor?.document.languageId !== 'javascript'&&editor?.document.languageId !== 'typescript'&&editor?.document.languageId !== 'typescriptreact') return;\n\t\t\t\t\teditor?.edit(editBuilder=>{\n\t\t\t\t\t\t\teditBuilder.insert(new vscode.Position(0, 0), template+\"\\n\")\n\t\t\t\t\t})\n\t\t\t})\n\t\t})\n\t})\n\n\t// context.subscriptions.push(disposable);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n"],"sourceRoot":""}